plugins {
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'groovy'
	id 'jacoco'
}

group = 'com.francisco.castaneda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-dependencies:2.5.14"
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	implementation 'org.codehaus.groovy:groovy-all:3.0.10'
	implementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
	implementation "com.h2database:h2"
    implementation 'junit:junit:4.13.1'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.modelmapper:modelmapper:2.4.4'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:3.11.2'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.2'
	testImplementation 'org.spockframework:spock-spring:2.0-M4-groovy-3.0'

}

jacoco {
	toolVersion = "0.8.7"
}

def jacocoExcludes = [
		'com/francisco/castaneda/bcitest/config/**',
		'com/francisco/castaneda/bcitest/exceptions/**',
		'com/francisco/castaneda/bcitest/mapper/**',
		'com/francisco/castaneda/bcitest/model/**',
		'com/francisco/castaneda/bcitest/repository/**',
		'com/francisco/castaneda/bcitest/rest/**',
		'com/francisco/castaneda/bcitest/security/**'
]
test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {()->
			fileTree(dir: it, exclude: jacocoExcludes)
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8 // Establece el umbral de cobertura al 80%
			}
		}
	}
}
